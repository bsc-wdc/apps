This is the Readme for:
K-means Fragments

[Name]: K-means Fragments
[Contact Person]: support-compss@bsc.es
[Access Level]: public
[License Agreement]: GPL
[Platform]: COMPSs

[Body]
 == Description ==
K-means clustering is a method of cluster analysis that aims to partition ''n'' points into ''k'' clusters in which each point belongs to the cluster with the nearest mean. It follows an iterative refinement strategy to find the centers of natural clusters in the data.

When executed with COMPSs, K-means first generates the input points by means of initialization tasks. For parallelism purposes, the points are split in a number of fragments received as parameter, each fragment being created by an initialization task and filled with random points.

After the initialization, the algorithm goes through a set of iterations. In every iteration, a computation task is created for each fragment; then, there is a reduction phase where the results of each computation are accumulated two at a time by merge tasks; finally, at the end of the iteration the main program post-processes the merged result, generating the current clusters that will be used in the next iteration. Consequently, if ''F'' is the total number of fragments, K-means generates ''F'' computation tasks and ''F-1'' merge tasks per iteration.


== Versions ==
There are two versions of Kmeans:

=== Version 1 : apps ===
Implements 3 ways of performing Kmeans, using random-generated objects or a dataset.

=== Version 2 : psco ===
Uses DataClay to perform the Kmeans.

== Build ==

The .jar files are build with Maven.

cd /PATH_TO_JAVA_APPS/kmeans/
mvn clean package
