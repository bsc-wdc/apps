This is the Readme for:
Matrix Multiplication for NxN

[Name]: Matrix Multiplication NxN
[Contact Person]: support-compss@bsc.es
[Access Level]: public
[License Agreement]: GPL
[Platform]: COMPSs

[Body]
== Description ==
Matrix multiplication is an operation that takes a pair of matrices and produces another matrix.

If A is an n×m matrix and B is an m×p matrix, the result AB of their multiplication is an n×p matrix defined only if the number of columns m in A is equal to the number of rows m in B.
When multiplying A and B, the elements of the rows in A are multiplied with corresponding columns in B and sum up, producing an element of the resultant matrix.

In this implementation, A and B are square matrices (same number of rows and columns), and so it is the result matrix C. Each matrix is divided in N blocks of M doubles. The multiplication of two blocks is done by a multiply task method with a simple three-nested-loop implementation. When executed with COMPSs, the main program generates N^3^ tasks arranged as N^2^ chains of N tasks in the dependency graph.

== Versions ==
There are three versions of Matrix Multiplication, depending on the data types used to store the blocks and the way the input data is read.
=== Version 1 : base ===
This one implements matmul using files and objects. For files, you can use existent files or generate them randomly, objects will be always random generated.
=== Version 2 : apps ===
Is identical to the first version but implements a new version using arrays.
=== Version 3 : mpi ===
The third version gives the possibility to execute Java methods with COMPSs as MPI invokations.

== Build ==

The .jar files are build with Maven.

cd ~/PATH_TO_JAVA_APPS/matmul/
mvn clean package

== Scripts usage ==

Interactive script: launch.sh

Although we showed how to execute an application with runcompss in each subdirectory, 
we strongly recommend to use the available bash scripts on the top of each application directory.
To run an application with the scripts, do the following:

        cd /PATH_TO_JAVA_APPS/matmul   # change directory to the application top directory
        ./launch.sh VERSION_TO_EXECUTE # VERSION_TO_EXECUTE it is 'base' in case that the version is '1_base'

TODO: SLURM jobscript: launch_mn.sh
