This is the Readme for:
Matrix Multiplication MPI

[Name]: Matrix Multiplication MPI
[Contact Person]: support-compss@bsc.es
[Access Level]: public
[License Agreement]: Apache 2.0
[Platform]: COMPSs

[Body]
 == Description ==
Matrix multiplication is a binary operation that takes a pair of matrices and produces another matrix.

If A is an n×m matrix and B is an m×p matrix, the result AB of their multiplication is an n×p matrix defined only if the number of columns m in A is equal to the number of rows m in B. When multiplying A and B, the elements of the rows in A are multiplied with corresponding columns in B.

In this implementation, A and B are square matrices (same number of rows and columns), and so it is the result matrix C. Each matrix is divided in N blocks of M doubles. The multiplication of two blocks is done by a multiply task method with a simple three-nested-loop implementation. When executed with COMPSs, the main program generates N^3^ tasks arranged as N^2^ chains of N tasks in the dependency graph.


== Versions ==
=== Version 1 ===
''native'', where the matrix multiplication uses java native tasks
=== Version 2 ===
''arrays'', where the matrix multiplication uses MPI tasks


== Execution instructions ==
Usage:
export MATMUL_BINARY=$binary
export MPI_PROCS=$mpi_procs
export CUS=$cus
runcompss matmul.files.Matmul <TYPE> <MSIZE> <BSIZE>

where:
		 * - TYPE: 1 for native, 2 for MPI
                 * - MSIZE: Number of blocks of the matrix
		 * - BSIZE: Number of elements per block


== Execution Example ==
export MATMUL_BINARY=~/workspace_java/matmul_mpi/binary/matmul
export MPI_PROCS=1
export CUS=1
runcompss matmul.files.Matmul 1 16 4


== Build ==
=== Option 1: Native java ===
cd ~/workspace_java/matmul_mpi/; javac src/main/java/matmul_mpi/*/*.java
cd src/main/java/; jar cf matmul_mpi.jar matmul/
cd ../../../; mv src/main/java/matmul_mpi.jar jar/

=== Option 2: Maven ===
cd ~/workspace_java/matmul_mpi/
mvn clean package

=== MPI Binary ===
cd ~/workspace_java/matmul_mpi/src/main/c/
mpiCC -O2 -o matmul matmul.c
mv matmul ~/workspace_java/matmul_mpi/binary/matmul

