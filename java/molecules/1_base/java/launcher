#!/bin/bash
#BSUB -J COMPSsDC 
#BSUB -oo compss_dataclay_%J.out
#BSUB -eo compss_dataclay_%J.err
#BSUB -n 4 
#BSUB -R "span[ptile=1]"
#BSUB -W 00:30
#BSUB -q bsc_cs
##BSUB -M 66000

function waitforpreviousrun {
dependency=$(bjobs | sed -n '3p' | awk '{print $1}')
while [ "$dependency" != "$LSB_JOBID" ]; do
   echo "Waiting for job "$dependency" to end!..."
   sleep 60
   dependency=$(bjobs | sed -n '3p' | awk '{print $1}')
done
}

#waitforpreviousrun

# HOST SELECTION EXAMPLE
HOSTSARRAY=($LSB_HOSTS)       # LSB_HOSTS contain the assigned nodes
CLIENTHOST=${HOSTSARRAY[0]}   # client in the first node
DCHOSTS=${HOSTSARRAY[@]:1}    # dataClay using the rest of the nodes (one is LogicModule, rest are DataService)


APPSDIR="/gpfs/scratch/bsc19/$USER/molecules/apps"
export MYCOMPSSAPPSDIR="/gpfs/scratch/bsc19/$USER/molecules/apps"
cp -rf "/gpfs/scratch/bsc19/$USER/molecules"
mkdir -p "/gpfs/scratch/bsc19/$USER/molecules"
cp -r "/gpfs/projects/bsc19/COMPSs_APPS/molecules/java/apps" "/gpfs/scratch/bsc19/$USER/molecules"


DCBASEDIR="/apps/COMPSs/DATACLAY"

echo "Job starting@$HOST"

export DATACLAYCLIENTCONFIG="$HOME/client_$LSB_JOBID.properties"
echo "HOST=${HOSTSARRAY[1]}" > $DATACLAYCLIENTCONFIG
echo "RMIPORT=7000" >> $DATACLAYCLIENTCONFIG
echo "TCPPORT=7001" >> $DATACLAYCLIENTCONFIG
chmod 777 $DATACLAYCLIENTCONFIG

export STORAGEPROPERTIES="$HOME/storage_$LSB_JOBID.properties"
echo "DataClayClientConfig=$HOME/client_$LSB_JOBID.properties" > $STORAGEPROPERTIES
echo "Account=Producer" >> $STORAGEPROPERTIES
echo "Password=Producer" >>  $STORAGEPROPERTIES
echo "StubsClasspath=$APPSDIR/DataClients/Producer/stubs" >> $STORAGEPROPERTIES
echo "DataSetForStore=ProducerDataset" >> $STORAGEPROPERTIES
echo "DataSets=ProducerDataset" >> $STORAGEPROPERTIES
chmod 777 $STORAGEPROPERTIES

# Stop DataClay (optional) 
# $DCBASEDIR/scripts/_stopDataClay.sh "$DCHOSTS" $DCBASEDIR

# Clean DataClay
$DCBASEDIR/cleanOutputsServersData.sh

# Start DataClay
$DCBASEDIR/scripts/_startDataClay_blaunch.sh "$DCHOSTS" $DCBASEDIR $LSB_OUTPUTFILE $LSB_ERRORFILE &

time=60
echo "Waiting for DataClay "$time" seconds"
sleep $time

# Register Application
$DCBASEDIR/utils/_registerApps.sh

# dataClay jar
dataclay_jar=/apps/COMPSs/DATACLAY/jars/dataclay.jar

# Run Application
enqueue_compss --master_port=43000 --log_level=debug --tracing=true --exec_time=30 --num_nodes=4 --tasks_per_node=4 --network=infiniband --worker_working_dir=${HOME} --classpath=${dataclay_jar}:${APPSDIR}/DataClients/Producer/lib/producer.jar:${APPSDIR}/DataModels/Molecule/lib/molecule.jar --comm=es.bsc.compss.nio.master.NIOAdaptor --storage_name=dataclay --storage_conf=$STORAGEPROPERTIES --task_execution=storage severo.producer.ProducerDataClay 500 100

# Stop DataClay (optional) 
$DCBASEDIR/scripts/_stopDataClay.sh "$DCHOSTS" $DCBASEDIR

