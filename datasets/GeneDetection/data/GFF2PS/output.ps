%!PS-Adobe-3.0
%%Title: chr4 
%%Creator: gff2ps
%%Version: v0.98d
%%CreationDate: 2012/05/22 12:58:13
%%For: jorgee
%%Pages: (atend)
%%Orientation: Portrait
%%BoundingBox: 0 0 595 842
%%EndComments
%
%    Author : Josep Francesc ABRIL FERRANDO
%    e-mail :        jabril@imim.es
%
% ------------------------------------------------------------------------
%                     PostScript Output from gff2ps
% ------------------------------------------------------------------------
%
%    *** Id: gff2ps,v 1.99 2003/05/27 15:31:20 lopep Exp ***
% 
% 
%      Converting GFF files to PostScript plots.
%
%      Copyright (C) 1999/2003 - Josep Francesc ABRIL FERRANDO  
%                                       Roderic GUIGO SERRA       
%
%    This program is free software; you can redistribute it and/or modify
%    it under the terms of the GNU General Public License as published by
%    the Free Software Foundation; either version 2 of the License, or
%    (at your option) any later version.
%
%    This program is distributed in the hope that it will be useful,
%    but WITHOUT ANY WARRANTY; without even the implied warranty of
%    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%    GNU General Public License for more details.
%
%    You should have received a copy of the GNU General Public License
%    along with this program; if not, write to the Free Software
%    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
%
% ------------------------------------------------------------------------
%
%%BeginProlog
%
%%BeginProcSet: ShortNames 1.0 0
/tflg false def % test flag
/bdf { bind def } bind def
/xdf { exch def } bdf
/cm { 28.35 mul } bdf
/in { 72    mul } bdf
/mmod { 2 dict begin /y xdf /x xdf x x y div truncate y mul sub end } bdf
%%EndProcSet:   ShortNames 1.0 0
%
%%BeginProcSet: Constants  1.0 0
% Printing Offset
/VUpOS 0.25 cm def  % offset defines non printable
/VDnOS 0.25 cm def  % paper area for pages (printer outlimits).
/HLtOS 0.25 cm def
/HRtOS 0.25 cm def
% Fixed Color Variables (CMYK)
/colordict 99 dict def colordict begin % 71 colors + 28 definitions
/black                { 0.00 0.00 0.00 1.00 } def
/greyd                { 0.00 0.00 0.00 0.90 } def
/verydarkgrey         { 0.00 0.00 0.00 0.80 } def
/greyc                { 0.00 0.00 0.00 0.70 } def
/darkgrey             { 0.00 0.00 0.00 0.60 } def
/greyb                { 0.00 0.00 0.00 0.50 } def
/grey                 { 0.00 0.00 0.00 0.40 } def
/greya                { 0.00 0.00 0.00 0.30 } def
/lightgrey            { 0.00 0.00 0.00 0.20 } def
/verylightgrey        { 0.00 0.00 0.00 0.10 } def
/white                { 0.00 0.00 0.00 0.00 } def
/verydarkmagenta      { 0.00 1.00 0.00 0.30 } def
/darkmagenta          { 0.00 0.80 0.00 0.05 } def
/magenta              { 0.00 0.60 0.00 0.00 } def
/lightmagenta         { 0.00 0.40 0.00 0.00 } def
/verylightmagenta     { 0.00 0.20 0.00 0.00 } def
/verydarkviolet       { 0.45 0.85 0.00 0.00 } def
/darkviolet           { 0.30 0.65 0.00 0.00 } def
/violet               { 0.22 0.55 0.00 0.00 } def
/lightviolet          { 0.15 0.40 0.00 0.00 } def
/verylightviolet      { 0.10 0.20 0.00 0.00 } def
/verydarkblue         { 1.00 1.00 0.00 0.20 } def
/darkblue             { 0.90 0.90 0.00 0.00 } def
/blue                 { 0.75 0.75 0.00 0.00 } def
/lightblue            { 0.50 0.50 0.00 0.00 } def
/verylightblue        { 0.30 0.30 0.00 0.00 } def
/verydarkskyblue      { 0.90 0.50 0.00 0.15 } def
/darkskyblue          { 0.75 0.45 0.00 0.00 } def
/skyblue              { 0.60 0.38 0.00 0.00 } def
/lightskyblue         { 0.45 0.25 0.00 0.00 } def
/verylightskyblue     { 0.30 0.15 0.00 0.00 } def
/verydarkcyan         { 1.00 0.00 0.00 0.10 } def
/darkcyan             { 0.80 0.00 0.00 0.00 } def
/cyan                 { 0.60 0.00 0.00 0.00 } def
/lightcyan            { 0.40 0.00 0.00 0.00 } def
/verylightcyan        { 0.20 0.00 0.00 0.00 } def
/verydarkseagreen     { 0.75 0.00 0.45 0.00 } def
/darkseagreen         { 0.62 0.00 0.38 0.00 } def
/seagreen             { 0.50 0.00 0.30 0.00 } def
/lightseagreen        { 0.38 0.00 0.22 0.00 } def
/verylightseagreen    { 0.25 0.00 0.15 0.00 } def
/verydarkgreen        { 1.00 0.00 1.00 0.25 } def
/darkgreen            { 0.80 0.00 0.80 0.00 } def
/green                { 0.60 0.00 0.60 0.00 } def
/lightgreen           { 0.40 0.00 0.40 0.00 } def
/verylightgreen       { 0.20 0.00 0.20 0.00 } def
/verydarklimegreen    { 0.50 0.00 1.00 0.10 } def
/darklimegreen        { 0.40 0.00 0.95 0.00 } def
/limegreen            { 0.30 0.00 0.80 0.00 } def
/lightlimegreen       { 0.20 0.00 0.65 0.00 } def
/verylightlimegreen   { 0.10 0.00 0.50 0.00 } def
/verydarkyellow       { 0.00 0.00 1.00 0.25 } def
/darkyellow           { 0.00 0.00 1.00 0.10 } def
/yellow               { 0.00 0.00 1.00 0.00 } def
/lightyellow          { 0.00 0.00 0.50 0.00 } def
/verylightyellow      { 0.00 0.00 0.25 0.00 } def
/verydarkorange       { 0.00 0.50 0.80 0.10 } def
/darkorange           { 0.00 0.40 0.80 0.00 } def
/orange               { 0.00 0.30 0.80 0.00 } def
/lightorange          { 0.00 0.20 0.75 0.00 } def
/verylightorange      { 0.00 0.15 0.70 0.00 } def
/verydarkred          { 0.00 1.00 1.00 0.15 } def
/darkred              { 0.00 0.80 0.80 0.00 } def
/red                  { 0.00 0.60 0.60 0.00 } def
/lightred             { 0.00 0.40 0.40 0.00 } def
/verylightred         { 0.00 0.20 0.20 0.00 } def
/verydarkbrown        { 0.35 0.85 1.00 0.40 } def
/darkbrown            { 0.30 0.70 1.00 0.35 } def
/brown                { 0.25 0.75 1.00 0.25 } def
/lightbrown           { 0.20 0.60 0.70 0.15 } def
/verylightbrown       { 0.15 0.45 0.55 0.00 } def
end % colordict
%  Paper Sizes  (in points)
/pagedict 34 dict def pagedict begin % 32+2 sizes defined
/pg10x14        {  720 1008 } def
/pga0           { 2384 3370 } def
/pga10          {   73  105 } def
/pga1           { 1684 2384 } def
/pga2           { 1190 1684 } def
/pga3           {  842 1190 } def
/pga4           {  595  842 } def
/pga5           {  420  595 } def
/pga6           {  297  420 } def
/pga7           {  210  297 } def
/pga8           {  148  210 } def
/pga9           {  105  148 } def
/pgb0           { 2920 4127 } def
/pgb10          {   91  127 } def
/pgb1           { 2064 2920 } def
/pgb2           { 1460 2064 } def
/pgb3           { 1032 1460 } def
/pgb4           {  729 1032 } def
/pgb5           {  516  729 } def
/pgb6           {  363  516 } def
/pgb7           {  258  363 } def
/pgb8           {  181  258 } def
/pgb9           {  127  181 } def
/pgexecutive    {  540  720 } def
/pgfolio        {  612  936 } def
/pgledger       { 1224  792 } def
/pglegal        {  612 1008 } def
/pgletter       {  612  792 } def
/pgquarto       {  610  780 } def
/pgstatement    {  396  612 } def
/pgtabloid      {  792 1224 } def
/pguserdefined  {  595 2384 } def
end % pagedict
%%EndProcSet:   Constants 1.0 0
% BG & FG colors
/BGcolor { colordict begin white end } def /bgcolor { BGcolor } bdf
/FGcolor { colordict begin black end } def /fgcolor { FGcolor } bdf
/frmN { colordict begin orange end } def
/frm0 { colordict begin blue end } def
/frm1 { colordict begin red end } def
/frm2 { colordict begin green end } def
/Blblcol { colordict begin verylightred end } def
% page orientation flag
/flglscape true def
% page size in points used for plot % pgA4 == 595  842
/pglimflg false def
/Dpage { pagedict begin pga4 flglscape { exch } if end } bdf
% margins (1 cm) (Up Down Left Right - margins are XY independent)
/UpM 1 cm def
/DnM 1 cm def
/LtM 1 cm def
/RtM 1 cm def
%
/TkMrkW 0.25 cm def % Defining tickmark-width.
/TkMrkHW TkMrkW 2 div def
/TkMspc 1 def
/BlckSp 0.25 cm def % Defining blocks-spacing
%
/SeqLen 97000000 def
/XNucOffSet 0 def
/NPages 1 def
/NBlck 1 def
/MaxNuclPage 97000000 def
/MSLen 0 def
/MINshwLBLlen -1 def % minimum gene length to show gene label on expands
/FlgBkBx false def
/FlgOSU true def
/FlgOSD true def
/FlgISU true def
/FlgISD true def
/TS 1 def
/TrS 0 def
/FlgGrd true def
/MaxTick 9700000 def
/MinTick 970000 def
%
/tracksize 1 cm def
/spcrsize  0.25 cm def
/LnTot  120.488 def
/LnFwd 60.2438 def
/LnRvs 60.2438 def
/LnBth 0 def
/blklblsc 1 def
/vectoffset 10 def
%
/XLftLbl 2 cm def
/FLftLbl true def
/XRgtLbl 2 cm def
/FRgtLbl false def
%
/XOriTitl 0 cm def
/YOriTitl 0 cm def
/YSTitl 1 cm def
/Titlscl 1 def
/flgcrd true def % credits flag
/FlgTitl true def
/headerdict 25 dict def headerdict begin
 /ShwTBx false def
 /ShwTt true def
 /Title (chr4 ) def
 /ShwST false def
 /SubTitle () def
 /ShwDate true def
 /Sdate (2012/05/22) def
 /ShwTime true def
 /Stime (12:58:13) def
 /Shwp_num true def
end % headerdict 
/pslbSC 1 def
/sclbSC 1 def
%
globaldict /CHcurrent 0 put
globaldict /CHnext 97000000 put
/CHoffsets [  ] def
/CHofflen CHoffsets length 1 sub def%
%%EndProcSet:   Setting_Vars 1.0 0
%
%%BeginProcSet: Page_Layout 1.0 0
% checking if margins are within the defined offset
flglscape {
 UpM HLtOS lt { /UpM HRtOS def } if % Checking margins for flglscape mode
 DnM HRtOS lt { /DnM HLtOS def } if
 LtM VDnOS lt { /LtM VUpOS def } if
 RtM VUpOS lt { /RtM VDnOS def } if
 } {
  UpM VUpOS lt { /UpM VUpOS def } if % Checking margins for portrait mode
  DnM VDnOS lt { /DnM VDnOS def } if
  LtM HLtOS lt { /LtM HLtOS def } if
  RtM HRtOS lt { /RtM HRtOS def } if
  } ifelse
% defining pagelimits and X - Y scales (Xlim Ylim)
/pglim { Dpage pop LtM RtM add sub Dpage exch pop UpM DnM add sub } def
% Defining starting point on page.
/XORI flglscape { UpM } { LtM } ifelse def
/YORI flglscape { LtM } { UpM } ifelse def
% Defining page-elements layout.
/XSTitl pglim pop XOriTitl 2 mul sub def
/XSBlck pglim pop def
/FSF 4 def % Point size for Credits for A4
/CSF { pagedict begin pga4 pop end Dpage pop exch div dup 1 cm gt { pop 1 cm } if dup FSF lt { pop FSF } if } bdf
/CYSF { pagedict begin pga4 exch pop end Dpage exch pop exch div dup 1 cm gt { pop 1 cm } if dup FSF lt { pop FSF } if } bdf
% /TYSF { pagedict begin pga4 end Dpage 3 2 roll div 3 1 roll exch div div mul } bdf
% /YSTitl YSTitl TYSF dup 4 cm gt { pop 4 cm } if dup 0.5 cm lt { pop 0.5 cm } if Titlscl mul def
/YSTitl YSTitl dup 4 cm gt { pop 4 cm } if dup 0.5 cm lt { pop 0.5 cm } if Titlscl mul def
/XOriBlck 0 def
/XSPlot { XSBlck FLftLbl { XLftLbl sub } if FRgtLbl { XRgtLbl sub } if } def
/XOriPlot { XOriBlck FLftLbl { XLftLbl add } if } def
/Xscale XSPlot MaxNuclPage div def
/YOriBlck { FlgTitl { YSTitl BlckSp add } { 0 } ifelse } def
/adcrd { flgcrd { CYSF 2 mul FlgBkBx { 5 add } if sub } if } bdf
/is2tck LnBth 0 gt LnFwd 0 gt LnRvs 0 gt and and FlgISU FlgISD and and def % true if must plot two tickmark lines
/is1tck LnFwd 0 gt LnBth 0 gt and LnFwd 0 gt LnRvs 0 gt and or LnBth 0 gt LnRvs 0 gt and or is2tck or FlgISU FlgISD or and def
%
NBlck 0 eq {
  /YSBlck { pglim exch pop adcrd FlgTitl { YOriTitl YSTitl BlckSp add add sub } if } def
  /YS2Blck { pglim exch pop adcrd FlgTitl { YOriTitl YSTitl BlckSp add add sub } if FlgOSU { TkMrkW 1 TkMspc add mul sub } if FlgOSD { TkMrkW 1 TkMspc add mul sub } if } def
  /YSFwd LnFwd def
  /YSBth LnBth def
  /YSRvs LnRvs def
 } {
  /YSBlck { pglim exch pop adcrd FlgTitl { YOriTitl YSTitl add NBlck } { 0 NBlck 1 sub } ifelse BlckSp mul add sub NBlck div } def
  /YS2Blck { pglim exch pop adcrd FlgTitl { YOriTitl YSTitl add NBlck } { 0 NBlck 1 sub } ifelse BlckSp mul add sub NBlck div FlgOSU { TkMrkW 1 TkMspc add mul sub } if FlgOSD { TkMrkW 1 TkMspc add mul sub } if is1tck { TkMrkW 1 TkMspc add mul is2tck { TkMrkW 1 TkMspc add mul add } if sub } if } def
  /YSLine YS2Blck LnTot div def
  /tracksize tracksize YSLine mul def
  /spcrsize spcrsize YSLine mul def
  /YSFwd LnFwd YSLine mul def
  /YSBth LnBth YSLine mul def
  /YSRvs LnRvs YSLine mul def
} ifelse
%%EndProcSet:   Page_Layout 1.0 0
%
%%BeginProcSet: functions 1.0 0
/msg { print (\n) print flush } bdf
/mst { print (\n) print flush counttomark 1 add dup { dup index 20 string cvs print ( ) print 1 sub } repeat (\n) print pop flush } bdf
/F { scale } bdf
/T { translate } bdf
/S { gsave } bdf
/R { grestore } bdf
/m { moveto } bdf
/rm { rmoveto } bdf
/l { lineto } bdf
/rl { rlineto } bdf
/K { stroke } bdf
/scmyk { setcmykcolor } bdf
/slw { setlinewidth } bdf
%%EndProcSet:   functions 1.0 0
%
%%BeginProcSet: text_functions 1.0 0
/sfont { findfont exch scalefont setfont } bdf
/chrh { S newpath 0 0 m false charpath flattenpath pathbbox exch pop 3 -1 roll pop R } bdf
/strh { 2 dict begin /lly 0.0 def /ury 0.0 def { ( ) dup 0 4 -1 roll put chrh dup ury gt { /ury xdf } { pop } ifelse dup lly lt { /lly xdf } { pop } ifelse } forall ury end } bdf
/stringheight  { S newpath 0 0 m (0) false charpath flattenpath pathbbox exch pop exch sub exch pop 0.95 mul R } bdf
/ct { S 0 T sfont scmyk dup stringwidth pop 2 div neg stringheight 2 div neg m show R } bdf
% X Y angle string valign halign fnt color ttxt
% valign : tv (top) cv (middle) bv (bottom) --- halign : lh (left) ch (center) rh (right)
/ttxt { S scmyk sfont 8 dict begin /h xdf /v xdf /lbl xdf /angle xdf /y xdf /x xdf /hs lbl stringwidth pop neg def /vs lbl strh neg def x y T angle rotate h (rh) eq { hs } { h (ch) eq { hs 2 div } { 0 } ifelse } ifelse v (tv) eq { vs } { v (cv) eq { vs 2 div } { 0 } ifelse } ifelse m lbl show end R } bdf
%%EndProcSet:   text_functions 1.0 0
%
%%BeginProcSet: painting_functions 1.0 0
/solidline   { [] 0 setdash } def
/dotted      { [ 1 ] 0 setdash } def
/longdotted  { [ 1 ] 5 setdash } def
/shortdashed { [ 10 ] 10 setdash } def
/longdashed  { [ 20 ] 10 setdash } def
/bbox { 4 copy 3 1 roll exch 6 2 roll 8 -2 roll m l l l closepath } bdf
/scolor { colordict exch get exec scmyk } bdf
%
colordict begin % adding definitions and functions
 /lup { /ku xdf /yu xdf /mu xdf /cu xdf } bdf
 /lmd { /km xdf /ym xdf /mm xdf /cnm xdf } bdf
 /ldn { /kd xdf /yd xdf /md xdf /cd xdf } bdf
 /n (-) def
 /load2col { lup ldn /dk ku kd sub def /dy yu yd sub def /dm mu md sub def /dc cu cd sub def } bdf
 /load3col { lup lmd ldn /uk ku km sub def /uy yu ym sub def /um mu mm sub def /uc cu cnm sub def /dk km kd sub def /dy ym yd sub def /dm mm md sub def /dc cnm cd sub def } bdf
 /col2 { 2 dict begin /p xdf p n ne { /pcd { p mul add } bdf cd dc pcd md dm pcd yd dy pcd kd dk pcd } { BGcolor } ifelse scmyk end } bdf
 /col3 { 3 dict begin /p xdf p n ne { /pcd { p 2 mul mul add } bdf /pcu { p 0.5 sub 2 mul mul add } bdf p 0.5 le { cd dc pcd md dm pcd yd dy pcd kd dk pcd } { cnm uc pcu mm um pcu ym uy pcu km uk pcu } ifelse } { BGcolor } ifelse scmyk end } bdf
 /rainbow { 1 dict begin /p xdf p n ne { p 0.1 le { p 0.2 div 0.5 add 1 0 0 } { p 0.4 le { 1 1 p 0.1 sub 0.3 div sub 0 0 } { p 0.6 le { 1 0 p 0.4 sub 0.2 div 0 } { p 0.8 le { 1 p 0.6 sub 0.2 div sub 0 1 0 } { 0 p 0.8 sub 0.2 div 1 0 } ifelse } ifelse } ifelse } ifelse scmyk } if end } bdf % <ifelse> } { BGcolor } ifelse scmyk end } bdf
end % colordict
%%EndProcSet:   painting_functions 1.0 0
%
%%BeginProcSet: header_functions 1.0 0
headerdict begin
 /ttfsz { YSTitl 0.50 mul } def
 /stfsz { YSTitl 0.25 mul } def
 /xtfsz { YSTitl 0.25 mul } def
 /sepsz { YSTitl 0.125 mul } def
 /ttfnt { ttfsz /Helvetica-Bold } def
 /stfnt { stfsz /Helvetica      } def
 /dtfnt { xtfsz /Times-Roman    } def
 /tmfnt { xtfsz /Times-Roman    } def
 /pgfnt { xtfsz /Times-Roman    } def
 /ttlong { S ttfnt sfont Title stringwidth pop stfnt sfont SubTitle stringwidth pop R 2 copy gt { pop } { exch pop } ifelse 2 div } bdf
 /Header { S XOriTitl YOriTitl YSTitl add T 1 -1 F ShwTBx { S 0 0 XSTitl YSTitl bbox 0.125 slw fgcolor scmyk K R } if ShwTt Title () ne and { sepsz ttlong add YSTitl sepsz sub 0 Title (tv) (ch) ttfnt fgcolor ttxt } if ShwST SubTitle () ne and { sepsz ttlong add sepsz 0 SubTitle (bv) (ch) stfnt fgcolor ttxt } if ShwDate { XSTitl 4.5 sub xtfsz 0 Sdate (tv) (rh) tmfnt fgcolor ttxt } if ShwTime { XSTitl 4.5 sub YSTitl 2 div 0 Stime (cv) (rh) dtfnt fgcolor ttxt } if Shwp_num { XSTitl 4.5 sub YSTitl xtfsz sub 0 PageNumber (bv) (rh) pgfnt fgcolor ttxt } if R } bdf
%
 /s_credits { S 1 dict begin /fs_cd CYSF def pglim fs_cd 0.5 mul sub T 1 -1 F 0 0 0 (This plot has been obtained using gff2ps. The most recent version of gff2ps is freely available at \042http:\/\/www1.imim.es/software/gfftools/GFF2PS.html\042. Copyright      1999 by Josep F. Abril & Roderic Guigo) (bv) (rh) fs_cd /Times-Roman fgcolor ttxt S fs_cd /Times-Roman sfont (   1999 by Josep F. Abril & Roderic Guigo) stringwidth pop neg R 0 0 (\343) (bv) (ch) fs_cd /Symbol fgcolor ttxt end R } bdf
end
%
%%EndProcSet:   header_functions 1.0 0
%
%%BeginProcSet: tickmarks 1.5 0
% Rule.ps ---> rules and scales
/tmdct 30 dict def tmdct begin
 /ChkLimits { 3 copy pop 5 2 roll dup dup 5 1 roll 3 1 roll lt 3 1 roll gt or { pop false } { true } ifelse } bdf 
 /ShowGrid 0 def % 0 - none : 1 - MinTicks : 2 - MaxTicks : 3 - Both
 /Gridup true def /Griddn true def /flgup true def
 /TkMrkDW TkMrkW 10 div def
 /TkFont { TkMrkHW /Helvetica } def
 /MaxWidthT { S MaxNuclPage 10 string cvs TkFont sfont stringwidth pop 2 mul R } bdf
 /CheckCloser { 3 copy pop MaxWidthT sub 3 1 roll MaxWidthT add 3 1 roll dup dup 5 1 roll 3 1 roll lt 3 1 roll gt or 4 1 roll 3 copy dup 3 1 roll ne 3 1 roll ne and 5 -1 roll and { pop false } { true } ifelse } bdf
 /ctextick { S TkFont sfont dup stringheight 2 div exch stringwidth pop 2 Xscm div neg Xscm exch 2 copy neg T 2 mul exch 2 mul neg exch S 0 0 bbox bgcolor scmyk S tflg { fgcolor scmyk } if 0.75 slw K R fill R 0 0 m fgcolor scmyk show R } bdf
 /bltextick { S TkFont sfont dup stringwidth pop 2 Xscm div neg Xscm TkMrkHW 2 copy flgup { TkMrkDW add T } { 2 mul T 1 -1 F } ifelse exch 2 mul neg exch S 0 0 bbox bgcolor scmyk S tflg { fgcolor scmyk } if 0.75 slw K R fill R 0 0 m fgcolor scmyk show R } bdf
 /tonormtick { /go true def 2 copy pop 2100000000 gt { /go false def } if go { 0 eq { 2 { dup dup 0 ne { MinTick mod } if sub exch } repeat } { 2 { dup dup 0 ne { MaxTick mod } if sub exch } repeat } ifelse } { pop } ifelse } bdf %%%%% WARNING TEMPORARY HACK ON: tonormtick
 /Mkg { 0 0 m l fgcolor scmyk dotted K } bdf
 % Reset scale numbering
 /CHoffrsc { CHofflen 0 ge { dup CHnext ge { globaldict /CHcurrent globaldict /CHnext get put 0 1 CHofflen { CHoffsets exch get dup CHnext gt { globaldict /CHnext 3 -1 roll put exit } { pop } ifelse } for } if CHcurrent sub } if } def
% the following Mklb prints integer scales
% /Mklb { S CHoffrsc 3 dict begin TS 3 eq { 1000000 div round cvi /q exch 20 string cvs def /y q length def /h y 2 add string def h 0 q putinterval h y (Mb) putinterval h } { TS 2 eq { 1000 div round cvi /q exch 20 string cvs def /y q length def /h y 2 add string def h 0 q putinterval h y (Kb) putinterval h } { 10 string cvs } ifelse } ifelse end R } bdf 
% the following Mklb prints 1 decimal position scales
 /mkexp { TrS 0 ne { 10 TrS exp cvi div } if div round cvi TrS 0 ne { 10 TrS exp cvi div } if } bdf
 /Mklb { S CHoffrsc 3 dict begin TS 3 eq { 1000000 mkexp /q exch 20 string cvs def /y q length def /h y 2 add string def h 0 q putinterval h y (Mb) putinterval h } { TS 2 eq { 1000 mkexp /q exch 20 string cvs def /y q length def /h y 2 add string def h 0 q putinterval h y (Kb) putinterval h } { 10 string cvs } ifelse } ifelse end R } bdf 
%
 /MkVGrid { S slw Gridup flgup not { not } if { 0 up Mkg } if Griddn flgup not { not } if { 0 down neg Mkg } if  R } bdf
 /MkAtick { slw 0 TkMrkHW neg m 0 TkMrkHW l fgcolor scmyk K } bdf
 /MkBtick { S dup Xscm 0 T ShowGrid 2 eq ShowGrid 3 eq or { 0.25 MkVGrid } if 1 MkAtick CheckCloser { Mklb ctextick } if R } bdf
 /MkCtick { slw 0 0 m 0 TkMrkHW 3 -1 roll { TkMrkDW sub } if l fgcolor scmyk K } bdf
 /MkDtick { S dup Xscm 0 T CheckCloser { Mklb bltextick } if ShowGrid 2 eq ShowGrid 3 eq or { 0.25 MkVGrid } if false 1 MkCtick R } bdf
 /baseline { S 2 setlinecap Xscm TkMrkDW 0.75 mul m Xscm TkMrkDW 0.75 mul l TkMrkDW 1.5 mul slw fgcolor scmyk K R } bdf % slw: 1.5 instead of 2
 /r { /Gridup true def /Griddn true def /flgup true def 0 exch TkMrkHW sub T S 0 T 1 -1 F 4 { 2 copy } repeat pop neg Xscm 0 T 0 tonormtick MinTick exch { ChkLimits { S Xscm 0 T 0.25 MkAtick ShowGrid 1 eq ShowGrid 3 eq or { 0 MkVGrid } if R } if } for 1 tonormtick MaxTick exch { ChkLimits { MkBtick } if } for 2 { dup dup 0 ne { MaxTick mmod } if 0 ne { MkBtick } { pop } ifelse } repeat pop pop R } bdf
 /x { 5 { 2 copy } repeat pop neg Xscm 0 T baseline 0 tonormtick MinTick exch { ChkLimits { S Xscm 0 T true 0.25 MkCtick ShowGrid 1 eq ShowGrid 3 eq or { 0 MkVGrid } if R } if } for 1 tonormtick MaxTick exch { ChkLimits { MkDtick } if } for 2 { dup dup 0 ne { MaxTick mmod } if 0 ne { MkDtick } { pop } ifelse } repeat pop pop } bdf 
 /s { /Gridup false def /Griddn true def /flgup true def 0 exch TkMrkW add T S 0 T 1 -1 F x R } bdf
 /z { /Gridup true def /Griddn false def /flgup false def 0 exch TkMrkW sub T S 0 T 1 1 F x R } bdf
 /g { /down xdf /up xdf S T 2 { 2 copy } repeat pop neg Xscm 0 T 1 tonormtick MaxTick exch { ChkLimits { S Xscm 0 T 0.125 slw 0 down Mkg R } if } for R pop pop } bdf
end % tmdct
%%EndProcSet:   tickmarks 1.5 0
%
%%BeginProcSet: objects 1.2 0
/shpdct 255 dict def shpdct begin
 /nucdif { 2 copy exch sub } bdf
 /mtrx matrix def
 /mrr false def
 /LY { Yscl FlgScRM { 0.45 mul } { 0.975 mul } ifelse } bdf
 /HLY { LY sc mul 2 div } bdf
 /rt { Yscl } bdf
 /vst 250 string def
 /clrselc { cvx exec dup 2 eq { pop load2col /clrproc /col2 load def } { dup 3 eq { pop load3col /clrproc /col3 load def } { dup 0 eq { pop white black load2col /clrproc /col2 load def } { dup 4 eq { 5 { pop } repeat /clrproc /rainbow load def } { 1 eq { white 8 4 roll load2col /clrproc /col2 load def } if } ifelse } ifelse } ifelse } ifelse } bdf % no end for closing dict because grdct must be closed by calling function
 /v { vtcsc clrproc v_s 0 m v_e 0 l vtcsc n ne { K } { newpath } ifelse /v_s v_s vstp add def /v_e v_e vstp add def } bdf
 /vc { v_s lvtcsc n ne { solidline lvtcsc } { dotted 0 } ifelse m v_e vtcsc n ne { solidline vtcsc } { dotted 0 } ifelse l K /v_s v_s vstp add def /v_e v_e vstp add def /lvtcsc vtcsc def } bdf
 /GetVtVar { /v_cmod xdf /v_ori xdf /v_end xdf /sc_ori xdf sc_ori v_ori gt { /v_ori sc_ori def } if } bdf
%%%
%%% score vector color gradient
% /vt { S /VStp xdf /VWdw xdf /vstp VStp Xscm def GetVtVar colordict begin v_cmod clrselc rt slw v_ori VWdw ge { v_ori VStp 2 div sub Xscm } { v_ori VWdw v_ori sub 2 div VStp 2 div sub add Xscm } ifelse dup /v_s xdf /v_e exch vstp add def S { currentfile vst readline pop { { token { cvx exec /vtcsc xdf v } { exit } ifelse } loop } stopped { exit } if } loop R end R } bdf
%%%
 /vt { S /VStp xdf /VWdw xdf /vstp VStp Xscm def GetVtVar colordict begin v_cmod clrselc rt slw v_ori Xscm 0 T VWdw 2 div Xscm dup /v_s xdf /v_e exch vstp add def S { currentfile vst readline pop { { token { cvx exec /vtcsc xdf v } { exit } ifelse } loop } stopped { exit } if } loop R end R } bdf
%%%
%%% score vector graph 
% /vtc { S /VStp xdf /VWdw xdf /vstp VStp Xscm def GetVtVar colordict begin v_cmod cvx exec scmyk 0.25 slw v_ori VWdw ge { v_ori VStp 2 div sub Xscm } { v_ori VWdw v_ori sub 2 div VStp 2 div sub add Xscm } ifelse dup /v_s xdf /v_e exch vstp add def /lvtcsc n def strnd (-) eq { 1 -1 F } if ScV 0 eq { 0 HLY neg T } if { currentfile vst readline pop { { token { cvx exec /vtcsc exch dup n ne { LY mul ScV 0 ne { 2 mul } if } if def vc } { exit } ifelse } loop } stopped { exit } if } loop end R } bdf % (Score-Vector Loop finished...LINE-PLOT) msg % ScV 0 eq { 4 } { 2 } ifelse div
%%%
 /vtc { S /VStp xdf /VWdw xdf /vstp VStp Xscm def GetVtVar colordict begin v_cmod cvx exec scmyk 0.25 slw v_ori Xscm 0 T VWdw 8 div Xscm dup /v_s xdf /v_e exch vstp add def /lvtcsc n def strnd (-) eq { 1 -1 F } if ScV 0 eq { 0 HLY neg T } if { currentfile vst readline pop { { token { cvx exec /vtcsc exch dup n ne { LY mul ScV 0 ne { 2 mul } if } if def vc } { exit } ifelse } loop } stopped { exit } if } loop end R } bdf % (Score-Vector Loop finished...LINE-PLOT) msg % ScV 0 eq { 4 } { 2 } ifelse div
%%%
%%%
 % position-score vector
 /vp { S GetVtVar v_ori 0 T { currentfile } bind loop (Position-Vector Loop finished...) msg R } bdf
 % segment-score vector
 /vg { S (Segment-Vector Loop finished...) msg R } bdf  
 % string vector
 /vw { S (String-Vector Loop finished...) msg R } bdf  
 % Functions for Shapes......
 /getfrcol { dup (.) eq { pop frmN } { dup 0 eq { pop frm0 } { dup 1 eq { pop frm1 } { 2 eq { frm2 } if } ifelse } ifelse } ifelse } bdf
 /cmdln { HLY m sqdif 2 div neg 0 rl scmyk K } bdf % S - R removed to allow frame-remainder fill mode to work.
 /lnfill { S Yscl slw sqdif cmdln sqdif 2 div cmdln R } bdf
 /frmfill { frm getfrcol rmd getfrcol lnfill } bdf
 /rnbfill { sc rainbow fill } bdf
 % this rbnfill produces a full rainbow gradient to fill a shape 
 % /rnbfill { 1 dict begin S /incr sqdif 100 div def 0 incr sqdif { dup dup incr add 0 exch 0 m l dup 0 gt { sqdif div } if rainbow Yscl slw K } for R end } bdf 
 /setcolmod { cmod cvx exec dup 1 eq { pop scmyk fill } { dup 2 eq { pop lnfill } { dup 5 eq { 5 { pop } repeat frmfill } { dup 4 eq { 5 { pop } repeat rnbfill } { pop } ifelse } ifelse } ifelse } ifelse } bdf
  /ShFsz { GpFsz 2 div pslbSC mul } bdf
 /ShFont { ShFsz /Helvetica } bdf 
 /postk { S 0 0 m 0 LY ScV 0 eq { 0.65 } { 1.15 } ifelse mul rl longdotted fgcolor scmyk 0.125 slw K R } bdf
 /shwpos { S Flgspos { seqori LY neg ScV 0 eq { 0.65 mul T } { 1 -1 F 1.15 mul T } ifelse sqend sqdif sqori 0 2 { S 0 T postk 10 string cvs 0 0 S ScV 1 eq { 1 -1 F } if strnd (-) eq { 1 -1 F 45 } { -45 } ifelse ScV 1 eq { neg } if 4 -1 roll strnd (-) eq { ScV 1 ne { (bv) } { (tv) } ifelse } { ScV 1 ne { (tv) } { (bv) } ifelse } ifelse (lh) ShFont fgcolor ttxt R R } repeat } if R } bdf
 % *V align:  0 center : 1 baseline : -1 reverse
 /frs { S strnd (-) eq { -1 1 F } if FtV 0 eq { 0 HLY neg T } if colordict begin p_s cvx exec newpath end R } bdf
 /GetVar { /ftlbl xdf /flblfg xdf /Flgspos xdf /FtV exch dup 2 eq { pop 0 /mrr true def } { /mrr false def } ifelse def /p_s xdf /cmod xdf /sc xdf /rmd xdf /frm xdf /sqend xdf /seqend sqend Xscm def /sqori xdf /seqori sqori Xscm def /sqdif sqend sqori sub Xscm def sqdif 0.1 lt { /sqdif 0.1 def } if /fflbl ftlbl () eq { false } { flblfg } ifelse def /p_strk true def pop } bdf
 /p { S GetVar shwpos strnd (-) eq { seqend } { seqori } ifelse 0 T frs R } bdf
 %%
 % new shape for expand
 /trchg 0.20 def
 %%
 /resize_xp { S 5 dict begin /nd_xp sqend def /end_xp seqend def /or_xp sqori def /ori_xp seqori def /df_xp sqdif def MSLen 0 gt { sqdif MSLen Xscm lt { strnd (-) eq { /sqori sqend MSLen sub def /seqori sqori Xscm def } { /sqend sqori MSLen add def /seqend sqend Xscm def } ifelse /sqdif sqend sqori sub Xscm def } if } if S 0 LY trchg mul 2 div T 1 1.35 F bline R /sqend nd_xp def /seqend end_xp def /sqori or_xp def /seqori ori_xp def /sqdif df_xp def end R } bdf
 %%
 /xpVL { GetVar strnd (-) eq { seqend } { seqori } ifelse 0 T strnd (-) eq { -1 1 F } if FtV 0 eq { 0 HLY neg T } if mrr { 0 LY sc mul T 1 -1 F } if } bdf
 %%
 /lxpshp { S xpVL 4 dict begin /hdif sqdif 2 div def /xdif sqdif xpnd mul def /hxdif xdif 2 div hdif xpnd mul sub hdif add def /vrtfct LY 4 div neg def /xpndmv xpndmv Xscm def colordict begin gcmod token { exch pop cvx exec } { pop pop black } ifelse S 1 LY sc mul F hdif trchg m hdif trchg neg l 0.025 LY div slw fgcolor scmyk K newpath R resize_xp seqori neg trchg neg T /LY vrtfct def /Xscm { Xscale mul } bdf { currentfile token pop exec } loop end end R } bdf 
 %%
 /xpshp { S xpVL 3 dict begin /hdif sqdif 2 div def /xdif sqdif xpnd mul def /vrtfct LY 4 div def /xpndmv xpndmv Xscm def colordict begin gcmod token { exch pop cvx exec } { pop pop black } ifelse S 1 LY sc mul F 0.025 LY div slw 0 trchg 1.2 mul m 0 trchg 1.3 mul l hdif xdif 2 div sub xpndmv strnd (-) eq { sub } { add } ifelse dup 0.73 l 0.74 l fgcolor scmyk K newpath R resize_xp 1 LY sc mul F hdif xdif 2 div sub xpndmv strnd (-) eq { sub } { add } ifelse 0.745 T 1 1 LY div F 0.225 0 T S 0 0 xdif vrtfct bbox fgcolor scmyk 0.5 slw K newpath R seqori xpnd mul neg 0 T /LY vrtfct def /Xscm { Xscale xpnd mul mul } bdf S grlbl () ne glblfg and { gp_st gp_nd gp_st sub 2 div add Xscm LY strnd (-) eq { 1.3 } { 1.35 } ifelse mul T strnd (-) eq { -1 -1 F } if gp_nd gp_st sub MINshwLBLlen gt { 0 0 0 grlbl strnd (-) eq { (tv) } { (bv) } ifelse (ch) LY /Helvetica fgcolor ttxt } if } if R S { currentfile token pop exec } loop /Xscm { Xscale mul } bdf R end end R } bdf %% sqdif trchg 1.2 mul m sqdif trchg 1.3 mul l hdif neg xpndmv add strnd (-) eq { neg } if dup 0.73 l 0.74 l % right line %%
 %%
 /uxpshp { S xpVL 3 dict begin /hdif sqdif 2 div def /xdif sqdif xpnd mul def /vrtfct LY 4 div def /xpndmv xpndmv Xscm def colordict begin gcmod token { exch pop cvx exec } { pop pop black } ifelse S 1 LY sc mul F 0.025 LY div slw 0 trchg 1.2 mul m 0 trchg 1.3 mul l hdif xpndmv strnd (-) eq { sub } { add } ifelse dup 0.73 l 1.35 l fgcolor scmyk K newpath R resize_xp 1 LY sc mul F hdif xpndmv strnd (-) eq { sub } { add } ifelse 1.355 T 1 1 LY div F 0.225 0 T S 0 0 xdif vrtfct bbox fgcolor scmyk 0.5 slw K newpath R seqori xpnd mul neg 0 T /LY vrtfct def /Xscm { Xscale xpnd mul mul } bdf S grlbl () ne glblfg and { gp_st gp_nd gp_st sub 2 div add Xscm LY strnd (-) eq { 1.3 } { 1.35 } ifelse mul T strnd (-) eq { -1 -1 F } if gp_nd gp_st sub MINshwLBLlen gt { 0 0 0 grlbl strnd (-) eq { (tv) } { (bv) } ifelse (ch) LY /Helvetica fgcolor ttxt } if } if R S { currentfile token pop exec } loop /Xscm { Xscale mul } bdf R end end R } bdf %% sqdif trchg 1.2 mul m sqdif trchg 1.3 mul l hdif neg xpndmv add strnd (-) eq { neg } if dup 0.73 l 1.35 l % right line %% xdif 2 div sub 1.35 T
 %%
 % Shapes......
 /HLFcrt { ScV 0 ne { 1 2 F } if } bdf
 /CkMR { mrr { 0 LY sc mul T 1 -1 F } if } bdf
 /PMX { 1 dict begin /svmtrix mtrx currentmatrix def CkMR } bdf
 /PMK { svmtrix setmatrix end } bdf
 /KCFmod { 0.25 slw scmyk S clip setcolmod R K } bdf  %%%%%%%%%%%%%%%%%%%%%%ALSO MODIFIED
 /cpt { PMX sqdif LY sc mul F m { l } repeat closepath PMK KCFmod } bdf
 /cptc { sqdif LY sc mul F arc closepath PMK KCFmod } bdf
 /lft { sqdif 0 T -1 1 F } bdf
 /no_shp { 4 { pop } repeat } bdf
 /line   { PMX sqdif LY sc mul F 0 0.5 m 1 0.5 l PMK 2 slw scmyk K } bdf % 1 slw
 /tline  { PMX sqdif LY sc mul F 0 0.5 m 1 0.5 l PMK 1.6 slw scmyk K } bdf % 1 slw
% /bline  { LY trchg mul dup 0 exch 0.77 mul T PMX sqdif LY sc mul F 0 0 m 1 0 l PMK slw scmyk K } bdf % 1 slw
% /bline  { LY trchg mul dup 0 exch 0.77 mul T PMX sqdif exch sc mul F 1.0 -0.5 1.0 0.5 0.0 0.5 3 0.0 -0.5 m { l } repeat closepath PMK KCFmod } bdf % 1 slw
 /bline  { LY trchg mul PMX sqdif exch sc mul F 1.0 0.0 1.0 0.5 0.0 0.5 3 0.0 0.0 m { l } repeat closepath PMK KCFmod } bdf % 1 slw
 /scline { PMX sqdif LY sc mul F 0 0.5 m 1 0.5 l PMK LY sc mul slw scmyk K } bdf 
 /box    { 1.0 0.0 1.0 1.0 0.0 1.0 3 0.0 0.0 cpt } bdf
 /hbox   { ScV 0 ne { 1.0 0.0 1.0 0.5 0.0 0.5 3 0.0 0.0 } { 1.0 0.5 1.0 1.0 0.0 1.0 3 0.0 0.5 } ifelse cpt } bdf
 /gtgb   { PMX 1.0 0.0 1.0 1.0 0.0 1.0 3 0.0 0.0 sqdif LY sc mul F m { l } repeat closepath PMK 0.25 slw scmyk S BGcolor scmyk fill R K grlbl () ne { S sqdif 2 div LY 2 div dup sc mul 0 grlbl (cv) (ch) 6 -1 roll /Helvetica FGcolor ttxt R } if } bdf % S clip BGcolor scmyk fill R 
 /fcir   { PMX 0.5 0.5 0.5 0 360 cptc } bdf
 /hcir   { PMX ScV 0 ne { 1 2 F 0.5 0.0 } { 0.5 0.5 } ifelse 0.5 0 180 cptc } bdf
 /frhead { 0.75 0.0 0.75 -0.1 0.755 -0.1 1.0 0.5 0.755 1.1 0.75 1.1 0.75 1.0 0.0 1.0 8 0.0 0.0 cpt } bdf
 /flhead { lft frhead } bdf
 /hrhead { ScV 0 ne { 1.0 0.0 0.755 1.1 0.75 1.1 0.75 1.0 0.0 1.0 5 0.0 0.0 } { 1.0 0.5 0.755 1.1 0.75 1.1 0.75 1.0 0.0 1.0 5 0.0 0.5 } ifelse cpt } bdf
 /hlhead { lft hrhead } bdf
 /frend  { 1.0 0.0 1.0 1.0 0.0 1.0 0.0 0.995 0.25 0.5 0.0 0.005 6 0.0 0.0 cpt } bdf
 /flend  { lft frend } bdf
 /hrend  { ScV 0 ne { 1.0 0.0 1.0 1.0 0.0 1.0 0.0 0.995 4 0.25 0.0 } { 1.0 0.5 1.0 1.0 0.0 1.0 0.0 0.995 4 0.25 0.5 } ifelse cpt } bdf
 /hlend  { lft hrend } bdf
 /frsgl  { 0.75 0.0 0.75 -0.1 0.755 -0.1 1.0 0.5 0.755 1.1 0.75 1.1 0.75 1.0 0.0 1.0 0.0 0.995 0.25 0.5 0.0 0.005 11 0.0 0.0 cpt } bdf
 /flsgl  { lft frsgl } bdf
 /hrsgl  { ScV 0 ne { 1.0 0.0 0.755 1.1 0.75 1.1 0.75 1.0 0.0 1.0 0.0 0.995 6 0.25 0.0 } { 1.0 0.5 0.755 1.1 0.75 1.1 0.75 1.0 0.0 1.0 0.0 0.995 6 0.25 0.5 } ifelse cpt } bdf
 /hlsgl  { lft hrsgl } bdf
 /frtgl  { 0.0 0.0 0.0 1.0 1.0 0.505 3 1.0 0.495 cpt } bdf
 /fltgl  { lft frtgl } bdf
 /hrtgl  { ScV 0 ne { 0.0 0.0 0.0 1.0 2 1.0 0.0 } { 0.0 0.5 0.0 1.0 2 1.0 0.5 } ifelse cpt } bdf
 /hltgl  { lft hrtgl } bdf
 /fdmd   { 0.0 0.5 0.5 1.0 1.0 0.5 3 0.5 0.0 cpt } bdf
 /hdmd   { ScV 0 ne { ScV 1 eq { 1.0 0.0 0.5 1.0 2 0.0 0.0 } { 0.0 1.0 1.0 1.0 2 0.5 0.0 } ifelse } { mrr { 1.0 0.5 0.5 1.0 2 0.0 0.5 } { 1.0 0.5 0.5 1.0 2 0.0 0.5 } ifelse } ifelse cpt } bdf
 /fdtgl  { ScV 0 ne { ScV 1 eq { 0.0 1.0 1.0 1.0 2 0.5 0.0 } { 1.0 0.0 0.5 1.0 2 0.0 0.0 } ifelse } { mrr { 0.0 1.0 1.0 1.0 2 0.5 0.5 } { 0.0 1.0 1.0 1.0 2 0.5 0.5 } ifelse } ifelse cpt } bdf
 /f2tgl { 1.0 0.0 0.0 1.0 1.0 1.0 3 0.0 0.0 cpt } bdf
 /fast  { scmyk PMX sqdif LY sc mul F 0.5 0.5 T 0.025 slw 10 { -0.5 0 m 0.5 0 l K 18 rotate } repeat PMK } bdf
 /fstar { PMX sqdif LY sc mul F 0 0.5 T 22.5 rotate 0 0 m 8 { 0.925 0 rlineto 225 rotate } repeat closepath PMK 0.75 slw scmyk S K R clip setcolmod } bdf 
 % gap shape definition begin 
 /gbbx { 1.1 -0.5 1.1 1.5 -0.1 1.5 3 -0.1 -0.5 m { l } repeat closepath } bdf
 /gfna { 0.60 1.50 0.0 0.5 0.50 0.5 -0.10 -0.50 m 3 { l } repeat } bdf
 /gfnb { 1 LY sc mul F gfna reversepath sqdif 0.50 sub 0 T gfna } bdf
 /gfnc { 0.0 0.0 0.0 1.0 1.0 1.0 3 1.0 0.0 m { l } repeat closepath } bdf
 /gap { PMX gfnb S 0.10 0 T sqdif 0.68 sub neg 1 F gbbx clippath newpath gfnc PMK 0.1 slw 4 copy scmyk S dotted K R clip setcolmod R S scmyk 0.36 slw K R S BGcolor scmyk 0.12 slw K R } bdf
 % New shapes
 /loop { PMX sqdif LY sc mul F 0.5 0.5 T -0.05 0 m -0.05 0.4 l -0.6 0.4 -0.6 1.0 0 1.0 curveto 0.6 1.0 0.6 0.4 0.05 0.4 curveto 0.05 0 l closepath PMK 0.75 slw scmyk S K R clip setcolmod } bdf
 % New CELERA Feature SHAPES X - Y
 /langl { PMX sqdif LY FlgScRM { 2.35 } { sc 1.10 mul } ifelse mul F 1.0 0.0 m 0.0 1.0 l PMK 0.175 slw scmyk K } bdf 
 /rangl { PMX sqdif LY FlgScRM { 2.35 } { sc 1.10 mul } ifelse mul F 0.0 0.0 m 1.0 1.0 l PMK 0.175 slw scmyk K } bdf 
% /hstar { PMX ScV 0 ne { 1 2 F 0.0 0.5 } { 0.0 -0.5 } ifelse T sqdif LY sc mul F newpath -0.1 -0.1 1.1 0.5 bbox newpath 22.5 rotate 0 0 m 8 { 0.925 0 rlineto 225 rotate } repeat closepath PMK 0.75 slw scmyk S K R S eoclip setcolmod R newpath 0 0.5 m sqdif 0.5 l K } bdf
 % ......Shapes
 % Group functions...
 /g_score 1 def % /g_score 1.1 def % /g_score 0.5 def
 % /GpFsz { Yscl 0.15 mul dup 8 gt { pop 8 } if gplbSC mul } def
 /GpFsz { Yscl 0.15 mul gplbSC mul } def
 /GpFont { GpFsz /Helvetica } bdf
 /gshp { S 0 gp_st gp_nd 0 0 g_score gcmod g_shape GpV Flgrpspos Flgglbl grlbl p R } bdf
 /gp_no { 4 { pop } repeat } bdf
 /gp_ln { scmyk 0.25 slw 0 0 m grdif 0 l K } bdf
 /gp_dt { dotted gp_ln } bdf
 /gp_lt { longdotted  gp_ln } bdf
 /gp_sh { shortdashed gp_ln } bdf
 /gp_lh { longdashed  gp_ln } bdf
 /gp_bk { scmyk 0.125 slw 2 dict begin /tl GpFsz 0.05 mul def /ol GpFsz 0.05 mul def 0 0 m S 0 ol neg rl K R tl 0 rl S 0 ol rl K R tl 0 rl S 0 ol neg rl K R K end } bdf
 /gp_raw { scmyk 0.125 slw strnd (-) eq { grdif 0 T -1 1 F } if 2 dict begin /tl GpFsz 0.05 mul def /ol GpFsz 0.1 mul def tl 0 m tl neg dup S ol rl K R S ol neg rl K R grdif 0 l S tl neg ol rl 0 -2 ol mul rl tl ol rl S fill R K R K end } bdf
 /gp_law { grdif 0 T -1 1 F gp_raw } bdf
 /CkGPL { dup GpFsz 2 div lt { pop GpFsz 0.55 mul } if } bdf
 /gln { S colordict begin g_line cvx exec end R } bdf
 /shgl { S grori Yscl ScV 0 eq { 0.2875 mul } { 0.775 mul } ifelse T gln S grdif 2 div Yscl 0.25 mul 2 div CkGPL 2 div T strnd (-) eq { 1 -1 F } if ScV -1 eq { 1 -1 F } if Flgglbl { 0 0 0 grlbl strnd (-) eq { ScV -1 eq { (bv) } { (tv) } ifelse } { ScV -1 eq { (tv) } { (bv) } ifelse } ifelse (ch) GpFont fgcolor ttxt } if R R } bdf 
 /GetGVar { /gplbSC xdf /grlbl xdf /glblfg xdf /Flgrpspos xdf /g_line xdf /GpV xdf /g_shape xdf /gcmod xdf /gp_nd xdf /grend gp_nd Xscm def /gp_st xdf /grori gp_st Xscm def /grdif gp_nd gp_st sub Xscm def /Flgglbl grlbl () eq { false } { glblfg } ifelse def } bdf
 /gx { exit } bdf 
end % shpdct
%%EndProcSet:   objects 1.2 0
%
%%BeginProcSet: blocks 1.1 0
/blckdct 80 dict def blckdct begin
 /Xscm { Xscale mul } bdf /Xscme { Xscm exch } bdf
 /gst 250 string def
 /XLL { blckori MaxTick sub } bdf
 /XLR { blckend MaxTick add } bdf
 /CKL { 2 { dup XLL lt { pop XLL } { dup XLR gt { pop XLR } if } ifelse exch } repeat } bdf
 % Group Functions
 /gp { S shpdct begin GetGVar shgl gshp { currentfile token pop exec } loop end R } bdf
 % EXPAND group function
 /xp { S shpdct begin /xpnlvl xdf /xpndmv xdf /xpnd xdf GetGVar /xpdsv save def /xpdmat matrix currentmatrix def S 0 gp_st gp_nd 0 0 g_score gcmod g_shape GpV Flgrpspos Flgglbl grlbl xpnlvl 2 eq { uxpshp } { xpnlvl 1 eq { xpshp } { lxpshp } ifelse } ifelse R xpdmat setmatrix xpdsv restore end R } bdf
 % Source Functions.
 /ScFsz { Yscl 0.75 mul dup 10 gt { pop 10 } if sclbSC mul } def
 /ScFont { ScFsz /Courier } bdf 
 /sc_no { 4 { pop } repeat } bdf
 /sc_ln { scmyk 0.25 slw 0 0 m XSPlot 0 l K } bdf
 /sc_dt { dotted      sc_ln } bdf
 /sc_lt { longdotted  sc_ln } bdf
 /sc_sh { shortdashed sc_ln } bdf
 /sc_lh { longdashed  sc_ln } bdf
 /sln { S colordict begin s_line cvx exec end R } bdf
 % /sbc { -10 Yscl 2 mul neg XSPlot 10 add Yscl 1.5 mul bbox clip newpath } bdf
 /sbb { -4 Yscl neg XSPlot 4 add Yscl 3 mul bbox clip newpath FlgScBx { 0 0 XSPlot Yscl bbox 0.25 slw fgcolor scmyk K newpath 0.125 0.125 XSPlot 0.125 sub Yscl 0.125 sub bbox clip newpath } if } bdf
 /shsll { S FLftLbl Flgslftlbl and { XLftLbl 2 div neg Yscl 2 div T strnd (-) ne { 1 -1 F } if 0 0 0 srclftlbl sclbva (ch) ScFont fgcolor ttxt } if R } bdf
 /shsrl { S FRgtLbl Flgsrgtlbl and { XSPlot XRgtLbl 2 div add Yscl 2 div T strnd (-) ne { 1 -1 F } if 0 0 0 srcrgtlbl sclbva (ch) ScFont fgcolor ttxt } if R } bdf
 /GetSVar { /sclbva xdf /sclbSC xdf /srcrgtlbl xdf /srclftlbl xdf /srgtlblfg xdf /slftlblfg xdf /s_line xdf /strnd xdf /FlgScRM xdf /FlgScBx xdf /spacer exch spcrsize mul def /Yscl exch tracksize mul def /ScV exch dup 2 eq { pop 0 } if def /Flgsrgtlbl srcrgtlbl () eq { false } { srgtlblfg } ifelse def /Flgslftlbl srclftlbl () eq { false } { slftlblfg } ifelse def strnd (.) eq { /Y Y spacer 2 div add def } { strnd (-) eq { /Y Y Yscl spacer add add def } if } ifelse } bdf
 /source { S GetSVar XOriPlot Y T strnd (-) eq { 1 -1 F } if shsrl shsll sbb S ScV 0 eq { 0 Yscl 2 div T 1 -1 F } { ScV 1 eq { 0 Yscl T 1 -1 F } if } ifelse sln S blckori Xscm neg 0 T } bdf
 /s_end { R R R strnd (.) eq { /Y Y Yscl add spacer 2 div add def } { strnd (+) eq { /Y Y Yscl spacer add add def } if } ifelse } bdf
 % Block Functions.
 /GetBVar { /blcknum exch 1 sub def /blckend xdf /blckori xdf /Y FlgOSU { TkMrkW 1 TkMspc add mul } { 0 } ifelse def /YB YOriBlck YSBlck blcknum mul add BlckSp blcknum mul add def } bdf
 /kbb { XOriBlck 5 sub -2 XSBlck 10 add YSBlck 2 add bbox FlgBkBx { S 1 slw fgcolor scmyk K R } { newpath } ifelse } bdf
 % tickmark calls
 /tm { S tmdct begin /ShowGrid xdf exec end R } bdf
 /shwgrd { FlgGrd { blckori blckend XOriPlot FlgOSU { TkMrkW } { 0 } ifelse 0 YSBlck FlgOSU { TkMrkW sub } if FlgOSD { TkMrkW sub } if {g} 0 tm } if } bdf
 /shwtck { shwgrd FlgOSU { blckori blckend XOriPlot 0 {s} 0 tm } if FlgOSD { blckori blckend XOriPlot YSBlck {z} 0 tm } if } bdf
 /chgtst { FlgISU FlgISD or is2tck not is1tck and and FlgISU is2tck and or is2tck FlgISD and or } bdf
 /uptck { shwgrd FlgOSU { blckori blckend XOriPlot 0 {s} 0 tm } if } bdf
 /dntck { FlgOSD { blckori blckend XOriPlot Y TkMrkW 1 TkMspc add mul add {z} 0 tm } if } bdf
 /nxtblck { dup dup (.) eq { pop YSFwd 0 gt { YSBth } { 0 } ifelse } { (-) eq { YSFwd 0 gt YSBth 0 gt or { YSRvs } { 0 } ifelse } { 0 } ifelse } ifelse } bdf
 /Strand { nxtblck 0 gt { /Y Y chgtst { TkMrkW 1 TkMspc add mul 2 div add } if def dup (-) eq { pop is1tck FlgISU FlgISD or is2tck not and FlgISU is2tck and or and { blckori blckend XOriPlot TkMrkW FlgOSU { 2 TkMspc 1.5 mul add mul } { 1 TkMspc 0.5 mul add mul } ifelse YSFwd 0 gt { YSFwd add } { YSBth add } ifelse {r} 0 tm } if } { (.) eq { is2tck FlgISD and { blckori blckend XOriPlot TkMrkW FlgOSU { 3 TkMspc 2.5 mul add mul } { 2 TkMspc 1.5 mul add mul } ifelse YSFwd add YSBth add {r} 0 tm } if } if } ifelse /Y Y chgtst { TkMrkW 1 TkMspc add mul 2 div add } if def } { pop } ifelse } bdf 
 /b_end { R end } bdf
 /vb_end { dntck R end } bdf
 % BG block fill functs
 % /bgtsz { TkMrkHW 1.25 mul /Helvetica-bold } def
 /bgtsp 5 def % /bgtsp { BlckSp 0.25 mul } def
 /bgtsz { bgtsp /Helvetica } def
 %% 
 /bgb { S /blbl xdf /cmod xdf /gp_nd exch dup blckend gt { pop blckend } if def /grend gp_nd Xscm def /gp_st exch dup blckori lt { pop blckori } if def /grori gp_st Xscm def /sqdif gp_nd gp_st sub Xscm def grori 0 T colordict begin S PMX sqdif YY F 0 0 1 1 bbox PMK clip setcolmod end R bgtsz sfont /ttt blbl stringwidth pop def sqdif ttt gt { /hpos sqdif 2 div def /haln (ch) def } { /hpos gp_st blckori ge { 0 } { sqdif } ifelse def /haln gp_nd blckori ge { (lh) } { (rh) } ifelse def } ifelse sqdif 10 mul ttt gt { hpos YY 1.025 mul T 1 -1 F 0 0 0 blbl (tv) haln bgtsz fgcolor ttxt } if R } bdf
 %%
 /bgw { S /blbl xdf /cmod xdf /gp_nd exch dup blckend gt { pop blckend } if def /grend gp_nd Xscm def /gp_st exch dup blckori lt { pop blckori } if def /grori gp_st Xscm def /sqdif gp_nd gp_st sub Xscm def grori 0 T colordict begin S PMX sqdif YY F 0 0 1 1 bbox PMK 0.5 slw S dotted K R clip setcolmod end R bgtsz sfont /ttt blbl stringwidth pop def sqdif ttt gt { /hpos sqdif 2 div def /haln (ch) def } { /hpos gp_st blckori ge { 0 } { sqdif } ifelse def /haln gp_nd blckori ge { (lh) } { (rh) } ifelse def } ifelse sqdif 10 mul ttt gt { hpos YY 1.025 mul T 1 -1 F 0 0 0 blbl (tv) haln bgtsz fgcolor ttxt } if R } bdf
 %%
 /oim { S /blbl xdf /cmod xdf /gp_nd exch dup blckend gt { pop blckend } if def /grend gp_nd Xscm def /gp_st exch dup blckori lt { pop blckori } if def /grori gp_st Xscm def /sqdif gp_nd gp_st sub Xscm def /sqh sqdif 2 div def /ttt bgtsz sfont blbl stringwidth pop def grori sqh add YY dup 3 1 roll T 1 -1 F colordict begin S -1 2 1 4 -1 roll bbox 0 -2 T ttt 0.9 mul dup neg 0.4 sub 0 m 2.5 1.75 rl 0 -3.5 rl closepath 0.5 add 0 m -2.5 1.75 rl 0 -3.5 rl closepath S fgcolor scmyk 0.0125 slw K R clip setcolmod R end 0 -2 0 blbl (cv) (ch) bgtsz fgcolor ttxt R } bdf
 %% BG block features
 /orm { S /blbl xdf /cmod xdf /gp_nd exch dup blckend gt { pop blckend } if def /grend gp_nd Xscm def /gp_st exch dup blckori lt { pop blckori } if def /grori gp_st Xscm def /sqdif gp_nd gp_st sub Xscm def /sqdH sqdif 2 div def grori sqdH add 0 T /dwcdcol { colordict begin cmod cvx exec pop end } def /dwcdln 0.25 def colordict begin S PMX sqdif TkMrkW neg F -0.5 0.15 m 0.5 0.15 l 0 1.25 l closepath PMK 0.125 slw fgcolor scmyk S K R clip setcolmod end R blbl () ne { 90 rotate TkMrkW 1.85 mul neg 0 T 1 -1 F bgtsp bgtsz sfont blbl stringwidth pop 0.85 mul blbl 1.4 drawcard } if R } bdf %% TkMrkW 1.60 mul neg %% bgtsp 1.20 mul %% 0.95 mul blbl
 %%
 /backft { S 2 dict begin /xtrhg TkMrkW TkMspc mul def /YY YSBlck FlgOSU { TkMrkW sub xtrhg add } if FlgOSD { TkMrkW sub xtrhg add } if def XOriPlot blckori Xscm sub FlgOSU { TkMrkW } { 0 } ifelse T /FlgScRM false def shpdct begin { currentfile token pop exec } loop end end R } bdf  % exit the loop with "gx" function from shpdct
 %% Block Vertical LABELS
 /drawcard { S 5 dict begin /dclblsc xdf /dclbl xdf /height xdf /width xdf /Hwidth width 2 div def newpath 0 height 2 div neg T Hwidth 0 m width 0 width height Hwidth arcto width height 0 height Hwidth arcto 0 height 0 0 Hwidth arcto 0 0 width 0 Hwidth arcto closepath 16 { pop } repeat S dwcdcol scmyk fill R fgcolor scmyk dwcdln slw K  Hwidth height 2 div 90 dclbl (cv) (ch) Hwidth dclblsc mul /Helvetica-Bold fgcolor ttxt end R } bdf
 %%
 /split_ruler { S XOriPlot blckori Xscm sub TkMrkW 2 div neg T /YY YSBlck FlgOSU { TkMrkW 3 div TkMspc add add } if FlgOSD { TkMrkW 3 div add } if def /FlgScRM false def shpdct begin /cmod (bgcolor 1) def /srlbl xdf /gp_nd xdf /grend gp_nd Xscm def /gp_st xdf /grori gp_st Xscm def /sqdif gp_nd gp_st sub Xscm def grori 2500 Xscm add YSBlck TkMrkW TkMspc add add T 1 -1 F /dwcdcol { colordict begin Blblcol end } def /dwcdln 1 def colordict begin FlgOSU { 0 TkMrkW 3 div neg T } if 1.0 0.0 1.0 1.0 0.0 1.0 3 0.0 0.0 PMX sqdif 5000 Xscm sub YY F m { l } repeat closepath PMK setcolmod srlbl () ne { sqdif YY 2 div T sqdif 4 div blklblsc mul dup -1.5 mul 0 T YY srlbl 1 drawcard } if end end R } bdf
%%
end % blockdict
%%EndProcSet:   blocks 1.0 0
%
%%BeginProcSet: main_function_calls 1.0 0
/block { blckdct begin GetBVar S 0 YB T kbb shwtck } bdf
/vblock { blckdct begin GetBVar S 0 YB T kbb uptck } bdf
%%EndProcSet:   main_function_calls 1.0 0
%
%%EndProlog
%
%%BeginSetup
% initgraphics
% true setpacking
true setstrokeadjust
0.125 slw
0 setlinejoin
0 setlinecap
% mark % Only for error-tracking purposes
%%EndSetup
%
%%Page: 1 1
%%BeginPageSetup
%
% Saving current page settings
/pgsave save def
% Setting BGcolor for sheet 
Dpage flglscape { exch } if 0 0 bbox S bgcolor scmyk fill R pglimflg { S shortdashed K R } if clip newpath
% Only for testing pagelimits
% S XORI YORI T pglim flglscape { exch } if 0 0 bbox FGcolor scmyk longdashed K R
% setting coordinate axes for page orientation
flglscape
 { XORI YORI T 90 rotate 1 -1 F }                  % (0,0) - Ori for landscape pages
 { XORI Dpage exch pop YORI sub T 1 -1 F } ifelse  % (0,0) - Ori for portrait pages
% Printing Header
headerdict begin
 /PageNumber (Page 1 of 1) def
 FlgTitl { Header } if
end
%%EndPageSetup
%
%%%% BLOCK 1 - PAGE 1
0 97000000 1 block
%%%% STRAND +
(+) Strand
%%%% SOURCE GeneWise
0 1 0.25 false true (+) (verydarkred sc_ln) true true (GeneWise) (GeneWise) 1 (cv) source
s_end  %%%% Closing SOURCE GeneWise
%%%% SOURCE GeneWise
0 1 0.25 false true (+) (verydarkred sc_ln) true true (GeneWise) (GeneWise) 1 (cv) source
s_end  %%%% Closing SOURCE GeneWise
%%%% STRAND .
(.) Strand
%%%% STRAND -
(-) Strand
%%%% SOURCE GeneWise
0 1 0.25 false true (-) (verydarkred sc_ln) true true (GeneWise) (GeneWise) 1 (cv) source
96046000 96046095 (fgcolor 1) (fgcolor no_shp) 0 (fgcolor gp_ln) false true (chr4-genewise-prediction-fg) 1 gp
0 96046000 96046095 0 0 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
gx
s_end  %%%% Closing SOURCE GeneWise
%%%% SOURCE GeneWise
0 1 0.25 false true (-) (verydarkred sc_ln) true true (GeneWise) (GeneWise) 1 (cv) source
96296165 96330701 (fgcolor 1) (fgcolor no_shp) 0 (fgcolor gp_ln) false true (chr4-genewise-prediction-a) 1 gp
0 96296165 96296337 2 0 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 96297402 96297540 0 2 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 96300839 96301026 2 0 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 96302485 96302623 0 2 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 96307963 96308139 0 0 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 96325283 96325443 2 0 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 96326172 96326321 2 2 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 96329803 96329965 0 2 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 96330492 96330701 0 0 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
gx
96235421 96252685 (fgcolor 1) (fgcolor no_shp) 0 (fgcolor gp_ln) false true (chr4-genewise-prediction-b) 1 gp
0 96235421 96235593 2 0 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 96238626 96238764 0 2 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 96240543 96240730 2 0 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 96244283 96244424 0 2 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 96246078 96246254 0 0 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 96250100 96250260 2 0 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 96250668 96250817 2 2 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 96252520 96252685 0 2 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
gx
96184721 96212555 (fgcolor 1) (fgcolor no_shp) 0 (fgcolor gp_ln) false true (chr4-genewise-prediction-c) 1 gp
0 96184721 96184896 2 0 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 96190394 96190532 0 2 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 96192530 96192717 2 0 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 96196076 96196214 0 2 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 96198323 96198499 0 0 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 96202137 96202297 2 0 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 96202687 96202836 2 2 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 96212390 96212555 0 2 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
gx
96111290 96174032 (fgcolor 1) (fgcolor no_shp) 0 (fgcolor gp_ln) false true (chr4-genewise-prediction-d) 1 gp
0 96111290 96111462 2 0 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 96113911 96114049 0 2 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 96137175 96137362 2 0 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 96142107 96142248 0 2 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 96145704 96145880 0 0 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 96166224 96166384 2 0 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 96167747 96167896 2 2 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 96170528 96170690 0 2 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 96173862 96174032 0 0 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
gx
96083374 96083526 (fgcolor 1) (fgcolor no_shp) 0 (fgcolor gp_ln) false true (chr4-genewise-prediction-fh) 1 gp
0 96083374 96083526 (.) (.) 0.91 (fgcolor 1) (fgcolor box) 0 false true (match) p
gx
96046097 96046913 (fgcolor 1) (fgcolor no_shp) 0 (fgcolor gp_ln) false true (chr4-genewise-prediction-ff) 1 gp
0 96046097 96046119 2 0 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 96046769 96046913 0 2 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
gx
95961512 96015258 (fgcolor 1) (fgcolor no_shp) 0 (fgcolor gp_ln) false true (chr4-genewise-prediction-e) 1 gp
0 95961512 95961684 2 0 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 95964302 95964440 0 2 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 95973952 95974139 2 0 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 95982990 95983131 0 2 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 95985901 95986077 0 0 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 96005779 96005939 2 0 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 96006543 96006692 2 2 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 96011770 96011932 0 2 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 96015043 96015258 0 0 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
gx
95912257 95912430 (fgcolor 1) (fgcolor no_shp) 0 (fgcolor gp_ln) false true (chr4-genewise-prediction-fe) 1 gp
0 95912257 95912430 (.) (.) 0.92 (fgcolor 1) (fgcolor box) 0 false true (match) p
gx
95861891 95896832 (fgcolor 1) (fgcolor no_shp) 0 (fgcolor gp_ln) false true (chr4-genewise-prediction-f) 1 gp
0 95861891 95862066 2 0 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 95866027 95866165 0 2 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 95868680 95868867 2 0 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 95881979 95882120 0 2 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 95884096 95884272 0 0 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 95894209 95894369 2 0 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 95895252 95895401 2 2 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 95896667 95896832 0 2 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
gx
95856784 95856936 (fgcolor 1) (fgcolor no_shp) 0 (fgcolor gp_ln) false true (chr4-genewise-prediction-fd) 1 gp
0 95856784 95856936 (.) (.) 0.90 (fgcolor 1) (fgcolor box) 0 false true (match) p
gx
95836901 95837077 (fgcolor 1) (fgcolor no_shp) 0 (fgcolor gp_ln) false true (chr4-genewise-prediction-fc) 1 gp
0 95836901 95837077 (.) (.) 1.00 (fgcolor 1) (fgcolor box) 0 false true (match) p
gx
95818371 95818523 (fgcolor 1) (fgcolor no_shp) 0 (fgcolor gp_ln) false true (chr4-genewise-prediction-fb) 1 gp
0 95818371 95818523 (.) (.) 0.91 (fgcolor 1) (fgcolor box) 0 false true (match) p
gx
95766340 95799851 (fgcolor 1) (fgcolor no_shp) 0 (fgcolor gp_ln) false true (chr4-genewise-prediction-g) 1 gp
0 95766340 95766512 2 0 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 95768689 95768827 0 2 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 95773085 95773272 2 0 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 95779557 95779698 0 2 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 95782208 95782427 1 0 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 95788156 95788288 2 1 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 95789205 95789354 2 2 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 95799686 95799851 0 2 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
gx
95712144 95738428 (fgcolor 1) (fgcolor no_shp) 0 (fgcolor gp_ln) false true (chr4-genewise-prediction-h) 1 gp
0 95712144 95712319 2 0 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 95723249 95723387 0 2 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 95723464 95723651 2 0 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 95725675 95725816 0 2 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 95728590 95728766 0 0 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 95734875 95735038 2 0 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 95735421 95735570 2 2 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
0 95738236 95738428 0 2 0.10 (fgcolor 5) (fgcolor box) 0 false true (cds) p
gx
95704946 95705086 (fgcolor 1) (fgcolor no_shp) 0 (fgcolor gp_ln) false true (chr4-genewise-prediction-fa) 1 gp
0 95704946 95705086 (.) (.) 0.59 (fgcolor 1) (fgcolor box) 0 false true (match) p
gx
s_end  %%%% Closing SOURCE GeneWise
b_end %%%% Closing BLOCK
%%%% SHOWPAGE
flgcrd { headerdict begin s_credits end } if
grestoreall
pgsave restore
%%%LEGEND%%%
showpage
%
% PageEND: 1 1
%
%%Trailer
%
%%Pages: 1
%%Orientation: Portrait
%%BoundingBox: 0 0 595 842
%%EOF
